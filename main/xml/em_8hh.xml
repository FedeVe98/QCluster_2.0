<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="em_8hh" kind="file" language="C++">
    <compoundname>em.hh</compoundname>
    <includedby refid="em_8cc" local="yes">em.cc</includedby>
    <includedby refid="qcluster_8cc" local="yes">qcluster.cc</includedby>
    <invincdepgraph>
      <node id="1">
        <label>em.hh</label>
        <link refid="em_8hh"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>em.cc</label>
        <link refid="em_8cc"/>
      </node>
      <node id="3">
        <label>qcluster.cc</label>
        <link refid="qcluster_8cc"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="em_8hh_1a82eead8e5a402b5c5da8b449073bad45" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int max_iterations</definition>
        <argsstring></argsstring>
        <name>max_iterations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="em.hh" line="3" column="12" bodyfile="em.cc" bodystart="16" bodyend="-1" declfile="em.hh" declline="3" declcolumn="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="em_8hh_1a99c4a29757d6b5e4f37a8b44e256e9c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int hard_em</definition>
        <argsstring>(int K, int N, int row_length, double **freq, double **quality, double *expected_qual, double **quality_1, double *expected_freq, int num_nt, double **freq_1, int *assignment, double *Z, int num_trials=1, char dist_type=&apos;e&apos;, int verbose=0)</argsstring>
        <name>hard_em</name>
        <param>
          <type>int</type>
          <declname>K</declname>
        </param>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int</type>
          <declname>row_length</declname>
        </param>
        <param>
          <type>double **</type>
          <declname>freq</declname>
        </param>
        <param>
          <type>double **</type>
          <declname>quality</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>expected_qual</declname>
        </param>
        <param>
          <type>double **</type>
          <declname>quality_1</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>expected_freq</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_nt</declname>
        </param>
        <param>
          <type>double **</type>
          <declname>freq_1</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>assignment</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>Z</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_trials</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>char</type>
          <declname>dist_type</declname>
          <defval>&apos;e&apos;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>verbose</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Hard EM clustering K = number of clusters N = number of samples row_length = row length of the freq matrix freq = frequencies matrix quality = quality matrix expected_qual = vector of expected quality of each word quality_1 = quality matrix for single bases expected_freq = vector of expected frequencies of each word num_nt = number of different bases (4) freq_1 = frequencies matrix for single bases assignment = vector of cluster assignment; must be pre-allocated Z = flat array for storing assignment confidence; must be pre-allocated num_trials = number of times to repeat clustering before chosing the result with the minimal distortion dist = distance: e = Euclidean, k = KL, s = symmetrized KL verbose = verbosity level Returns the number of clusters formed </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="em.hh" line="25" column="5" bodyfile="em.cc" bodystart="330" bodyend="394" declfile="em.hh" declline="25" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="em_8hh_1a82eead8e5a402b5c5da8b449073bad45" kindref="member">max_iterations</ref>;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="em_8hh_1a99c4a29757d6b5e4f37a8b44e256e9c7" kindref="member">hard_em</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row_length,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">**<sp/>freq,<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>**quality,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*expected_qual,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>**quality_1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*expected_freq,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_nt,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">**<sp/>freq_1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>assignment,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>Z,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_trials=1,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dist_type=</highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>verbose=0);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="em.hh"/>
  </compounddef>
</doxygen>
